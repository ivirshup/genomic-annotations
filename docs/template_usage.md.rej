diff a/docs/template_usage.md b/docs/template_usage.md	(rejected hunks)
@@ -68,6 +68,39 @@ git push -u origin main
 
 Your project should be now available at `https://github.com/ivirshup/genomic-features`. While the repository at this point can be directly used, there are few remaining steps that needs to be done in order to achieve full functionality.
 
+### The pyproject.toml file
+
+Modern Python package management uses a `pyproject.toml` that was first introduced in [PEP 518](https://peps.python.org/pep-0518/).
+This file contains build system requirements and information, which are used by pip to build the package.
+For more details please have a look at [pip's description of the pyproject.toml file](https://pip.pypa.io/en/stable/reference/build-system/pyproject-toml/).
+
+#### Important metadata fields
+
+The `[project]` section in the `pyproject.toml` file defines several important metadata fields that might require editing.
+For example, the `name`, `description`, `authors` fields could need updates as the project evolves.
+Especially, the `version` field needs to be adapted if newer versions of the package are to be released.
+See {ref}`vcs-based-versioning` for more details.
+
+#### Dependency management
+
+Package dependencies can be added to the `dependencies` of the `[project]` section.
+You can constrain versions using `>=` and other less useful operators (`>`, `<`, `<=`, `==`, `!=`, and `~=`).
+A common example would be `twine>=4.0.2` which requires `twine` to be installed with at least version `4.0.2` or greater.
+As another example, if there is a known buggy version, you could exclude it like `numpy >=3.0, !=3.0.5`.
+
+Further optional dependencies are defined in the `[project.optional-dependencies]` section such as dependencies only for tests (`test`).
+All dependencies listed in such optional dependency groups can then be installed by specifying them like: `pip install <package-name>[test]`.
+
+#### Tool configurations
+
+The `pyproject.toml` file also serves as single configuration file for many tools such as many {ref}`pre-commit`.
+For example, the line length of [black](https://github.com/psf/black) can be configured as follows:
+
+```toml
+[tool.black]
+line-length = 120
+```
+
 ### Coverage tests with _Codecov_
 
 Coverage tells what fraction of the code is "covered" by unit tests, thereby encouraging contributors to
